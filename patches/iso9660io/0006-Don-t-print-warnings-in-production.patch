From 6c0f6ad6adcc2e1562093ba178ad96ae513a82c5 Mon Sep 17 00:00:00 2001
From: squimrel <squimrel@users.noreply.github.com>
Date: Mon, 5 Jun 2017 18:10:28 +0000
Subject: [PATCH 06/28] Don't print warnings in production

A library should not spam the console with debug messages.
---
 BUILD          | 4 ++--
 CMakeLists.txt | 2 +-
 src/image.cc   | 8 +++++++-
 3 files changed, 10 insertions(+), 4 deletions(-)

diff --git a/BUILD b/BUILD
index c24115e..a241c07 100644
--- a/BUILD
+++ b/BUILD
@@ -2,11 +2,11 @@ cc_library(
     name="iso9660",
     srcs=glob(["src/*.cc"]),
     hdrs=glob(["include/*.h"]),
-    copts=["-std=c++11", "-Wall", "-O3"],
+    copts=["-std=c++11", "-Wall", "-O3", "-DNDEBUG"],
     visibility=["//visibility:public"], )
 
 cc_binary(
     name="persistent-storage",
     srcs=["example/persistent-storage.cc"],
-    copts=["-std=c++11", "-Wall", "-O3"],
+    copts=["-std=c++11", "-Wall", "-O3", "-DNDEBUG"],
     deps=[":iso9660"], )
diff --git a/CMakeLists.txt b/CMakeLists.txt
index 98cec74..a6eb951 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,7 +1,7 @@
 cmake_minimum_required(VERSION 2.6)
 project(iso9660)
 
-set(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -std=c++11 -Wall -O3")
+set(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -std=c++11 -Wall -O3 -DNDEBUG")
 
 include_directories(.)
 file(GLOB FILES src/*.cc include/*.h)
diff --git a/src/image.cc b/src/image.cc
index 6af041b..8fc1593 100644
--- a/src/image.cc
+++ b/src/image.cc
@@ -23,10 +23,12 @@
 
 #include <algorithm>
 #include <fstream>
-#include <iostream>
 #include <stdexcept>
 #include <string>
 #include <vector>
+#ifndef NDEBUG
+#include <iostream>
+#endif
 
 #include "./include/file.h"
 #include "./include/iso9660.h"
@@ -136,15 +138,19 @@ iso9660::SectorType iso9660::Image::read_volume_descriptor() {
       } else if (tmp->joliet_level() > 0) {
         supplementary_ = std::move(tmp);
       } else {
+#ifndef NDEBUG
         std::cout << "Warning: Skipping non-joliet supplementary volume "
                   << "descriptor record." << std::endl;
+#endif
       }
     } break;
     // ECMA 119 - 9.3
     case SectorType::PARTITION:
     default:
+#ifndef NDEBUG
       std::cout << "Unknown type: " << static_cast<int>(header.type)
                 << std::endl;
+#endif
       break;
   }
   return type;
-- 
2.14.1

