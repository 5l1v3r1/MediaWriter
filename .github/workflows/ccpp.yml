name: Automatic build

on: [push]

jobs:
  Linux:

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install libxss1 libgstreamer-plugins-base1.0-0 libgstreamer1.0-0 qt5-default libqt5gui5 libqt5webengine5 libqt5webenginecore5 libqt5webenginewidgets5 libqt5printsupport5 libqt5quickwidgets5 qml-module-qtquick-controls libqt5x11extras5 binutils cmake pkg-config qtbase5-dev qtwebengine5-dev libqt5x11extras5-dev  qtbase5-private-dev libssl-dev libxss-dev libxmu-dev
    - name: Configure
      run: qmake .
    - name: Build
      run: make -j2

  macOS:
    runs-on: macOS-latest

    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - name: Install dependencies
      run: |
        brew install qt
        echo 'export PATH="/usr/local/opt/qt/bin:$PATH"' >> ~/.bash_profile
        brew install xz
        brew install git
    - name: Configure
      run: |
        export PATH="/usr/local/opt/qt/bin:/usr/local/opt/git/bin:$PATH"
        ls /usr/local/opt/qt/bin
        qmake .
    - name: Build
      run: make -j2

  Windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1
      with:
        path: d:/a/MediaWriter/Qt
        key: QtCache
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        cached: ${{ steps.cache-qt.outputs.cache-hit }}
        arch: win64_mingw73
    - name: Build xz-utils
      shell: bash
      run: |
        git clone https://git.tukaani.org/xz.git
        sed -i 's/#include "config.h"//' xz/src/common/common_w32res.rc
        sed -i 's/PACKAGE_NAME/"liblzma"/' src/common/common_w32res.rc
        sed -i 's/PACKAGE_URL/"https:\/\/tukaani.org\/xz\/"/' xz/src/common/common_w32res.rc
        mkdir xz/build
        cd xz/build
        cmake -DCMAKE_SH="CMAKE_SH-NOTFOUND" -G "MinGW Makefiles" -DCMAKE_INSTALL_PREFIX="$Qt5_Dir" -DBUILD_SHARED_LIBS=ON ..
        mingw32-make -j2 VERBOSE=1
        mingw32-make install
        # ugh
        cp "$Qt5_Dir/bin/liblzma.dll" "$Qt5_Dir/bin/libliblzma.dll"
    - name: Build MediaWriter
      shell: bash
      run: |
        #export PATH=$(echo "$PATH" | sed -e 's/:\/c\/ProgramData\/Chocolatey\/bin//' | sed -e 's/:\/c\/Strawberry\/c\/bin//')
        #export PATH="$Qt5_Dir/../../Tools/mingw730_32/bin:$PATH"
        mkdir build
        cd build
        "$Qt5_Dir/bin/qmake"  ..
        mingw32-make -j2 VERBOSE=1

